/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mvbos.ame;

import br.com.mvbos.ame.util.GridValue;
import java.awt.Color;
import java.awt.Component;
import java.awt.Frame;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.AbstractListModel;
import javax.swing.JTextField;

/**
 *
 * @author Marcus Becker
 */
public class ColorsMapJDialog extends javax.swing.JDialog {

    //private Color lastColor = Color.WHITE;
    private Map<String, Color> map =  new LinkedHashMap<>(20); //new HashMap<>(10);

    private List<GridValue> gridValues = Collections.emptyList();

    private final AbstractListModel model;
    private List<String> values = new ArrayList<>(10);
    private final int[] colors = {255, 204, 153, 102, 51, 0};//{0, 51, 102, 153, 204, 255};
    private boolean ok;

    public ColorsMapJDialog(Frame parent, boolean modal) {
        super(parent, modal);

        model = new AbstractListModel() {

            @Override
            public int getSize() {
                return values.size();
            }

            @Override
            public Object getElementAt(int index) {
                return values.get(index);
            }
        };

        initComponents();

        JTextField tf;

        for (int r = 0; r < colors.length; r++) {
            for (int g = 0; g < colors.length; g++) {
                for (int b = 0; b < colors.length; b++) {
                    tf = new JTextField();
                    tf.setEditable(false);
                    tf.setBackground(new Color(colors[r], colors[g], colors[b]));
                    tf.setToolTipText(String.format("%d, %d, %d", colors[r], colors[g], colors[b]));
                    tf.addFocusListener(new FocusAdapter() {
                        @Override
                        public void focusGained(FocusEvent evt) {
                            Color lastColor = ((JTextField) evt.getSource()).getBackground();
                            changeSelection(lastColor);
                        }
                    });

                    pnColors.add(tf);
                }
            }
        }

        pnColors.updateUI();

        update();

    }

    private void update() {
        //map.clear();
        values = Arrays.asList(tfValues.getText().split(";"));
        for (String s : values) {
            if (!map.containsKey(s)) {
                map.put(s, Color.WHITE);
            }
        }
        jListValues.updateUI();
    }

    private void changeSelection(Color color) {
        int sel = jListValues.getSelectedIndex();

        if (sel < 0) {
            return;
        }

        String val = model.getElementAt(sel).toString();

        if (color != null) {
            map.put(val, color);
        } else {
            Color old = map.get(val);
            for (Component c : pnColors.getComponents()) {
                if (c instanceof JTextField) {
                    JTextField t = (JTextField) c;
                    if (t.getBackground().equals(old)) {
                        t.requestFocus();
                    }
                }
            }
        }

        tfColorSel.setBackground(map.get(val));
        tfValueSel.setText(val);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfValues = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pnColors = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListValues = new javax.swing.JList();
        btnUpdate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tfColorSel = new javax.swing.JTextField();
        tfValueSel = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        tfAdd = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Values with Colors");

        tfValues.setText("BL;CN;EV;PI;LN;SC;P1;P2;PF;PV");

        jLabel1.setText("Semicolon separated values:");

        pnColors.setLayout(new java.awt.GridLayout(9, 9));

        jListValues.setModel(model);
        jListValues.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListValues.setToolTipText("");
        jListValues.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListValuesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListValues);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tfColorSel.setEditable(false);

        tfValueSel.setEditable(false);
        tfValueSel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfValueSelKeyReleased(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("-");
        btnRemove.setToolTipText("Remove selected value");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        tfAdd.setToolTipText("New value");

        btnAdd.setText("+");
        btnAdd.setToolTipText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfColorSel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValueSel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemove)
                            .addComponent(btnAdd)
                            .addComponent(tfAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfColorSel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfValueSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnColors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfValues, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(btnUpdate))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfValues, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnColors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListValuesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListValuesValueChanged
        if (evt.getValueIsAdjusting()) {
            changeSelection(null);
        }
    }//GEN-LAST:event_jListValuesValueChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tfValueSelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfValueSelKeyReleased

        /*int sel = jListValues.getSelectedIndex();
         if (sel >= 0) {
         String val = tfValues.getText();
         String old = model.getElementAt(sel).toString();
         Color oldColor =  map.get(old);
         map.remove(old);
         map.put(val, oldColor);
         }*/

    }//GEN-LAST:event_tfValueSelKeyReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!tfAdd.getText().isEmpty()) {

            if (!map.containsKey(tfAdd.getText())) {
                /* TODO need change AbstractModel
                 values.add(tfAdd.getText());
                 map.put(tfAdd.getText(), Color.WHITE);*/

                List<String> newList = new ArrayList<>(values);

                newList.add(tfAdd.getText());
                map.put(tfAdd.getText(), Color.WHITE);

                values = newList;

                jListValues.updateUI();
            }

            tfAdd.setText(null);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int sel = jListValues.getSelectedIndex();
        if (sel >= 0) {
            String old = values.get(sel);
            //TODO need change AbstractModel values.remove(old);

            List<String> newList = new ArrayList<>(values);
            newList.remove(old);
            map.remove(old);

            values = newList;

            jListValues.updateUI();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (map.isEmpty()) {
            return;
        }

        Set<String> keys = map.keySet();
        gridValues = new ArrayList<>(keys.size());

        for (String key : keys) {
            GridValue gv = new GridValue(1, key, null);
            gv.setColor(map.get(key));
            
            gridValues.add(gv);
        }

        ok = true;

        this.dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListValues;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnColors;
    private javax.swing.JTextField tfAdd;
    private javax.swing.JTextField tfColorSel;
    private javax.swing.JTextField tfValueSel;
    private javax.swing.JTextField tfValues;
    // End of variables declaration//GEN-END:variables

    public boolean isOk() {
        return ok;
    }

    public List<GridValue> getList() {

        return gridValues;
    }

}
