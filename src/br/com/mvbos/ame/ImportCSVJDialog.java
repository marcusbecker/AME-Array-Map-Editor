/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mvbos.ame;

import br.com.mvbos.ame.util.GridValue;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Marcus Becker
 */
public class ImportCSVJDialog extends javax.swing.JDialog {

    private File file;
    private boolean reload;
    private StringBuilder sb = new StringBuilder();

    private int lines;
    private int cols;

    private boolean ok;
    private GridValue[][] values = new GridValue[0][0];

    /**
     * Creates new form ImportCSVJDialog
     */
    public ImportCSVJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private void updateSelection() {
        if (file == null) {
            return;
        }

        String sep = jcDelimiter.getSelectedItem().toString();

        if (reload) {
            reload = false;
            lines = cols = 0;
            sb.delete(0, sb.length());

            try (Scanner sc = new Scanner(new FileInputStream(file))) {
                while (sc.hasNextLine()) {
                    String temp = sc.nextLine();
                    if (temp.trim().isEmpty()) {
                        continue;
                    }

                    lines++;
                    String arr[] = temp.split(sep);
                    cols = cols >= arr.length ? cols : arr.length;

                    sb.append(temp);

                    if (sc.hasNextLine()) {
                        sb.append(System.lineSeparator());
                    }
                }

            } catch (Exception e) {

            }

        } else {
            try (Scanner sc = new Scanner(sb.toString())) {
                cols = 0;
                while (sc.hasNextLine()) {
                    String temp = sc.nextLine();
                    String arr[] = temp.split(sep);
                    cols = cols >= arr.length ? cols : arr.length;
                }

            } catch (Exception e) {

            }
        }

        tfLines.setText(String.valueOf(lines));
        tfColumns.setText(String.valueOf(cols));

        tfSample.setText(sb.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfFile = new javax.swing.JTextField();
        btnChoose = new javax.swing.JButton();
        jcDelimiter = new javax.swing.JComboBox();
        tfLines = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfColumns = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfSample = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import Grid");

        btnChoose.setText("...");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        jcDelimiter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ",", ";" }));
        jcDelimiter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcDelimiterItemStateChanged(evt);
            }
        });

        tfLines.setText("999");

        jLabel1.setText("Lines:");

        jLabel2.setText("Cols:");

        tfColumns.setText("999");

        jLabel3.setText("Delimiter:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tfSample.setColumns(20);
        tfSample.setFont(new java.awt.Font("Consolas", 0, 13)); // NOI18N
        tfSample.setRows(5);
        jScrollPane1.setViewportView(tfSample);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChoose))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLines, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfColumns, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcDelimiter, 0, 399, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfColumns, tfLines});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChoose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(tfColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed

        JFileChooser fc = new JFileChooser(tfFile.getText().isEmpty() ? Paths.get("").toAbsolutePath().toString() : tfFile.getText());
        fc.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                return f.isFile() && f.getName().toLowerCase().endsWith(".csv");
            }

            @Override
            public String getDescription() {
                return "*.csv";
            }
        });

        if (fc.showOpenDialog(this) == JFileChooser.OPEN_DIALOG) {
            file = fc.getSelectedFile();
            tfFile.setText(fc.getSelectedFile().getAbsolutePath());

            reload = true;
            updateSelection();
        }

    }//GEN-LAST:event_btnChooseActionPerformed

    private void jcDelimiterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcDelimiterItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            updateSelection();
        }

    }//GEN-LAST:event_jcDelimiterItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        int lineCount = 0;
        values = new GridValue[lines][cols];
        String sep = jcDelimiter.getSelectedItem().toString();

        try (Scanner sc = new Scanner(sb.toString())) {
            while (sc.hasNextLine()) {
                String temp = sc.nextLine();
                String arr[] = temp.split(sep);

                for (int col = 0; col < cols; col++) {
                    values[lineCount][col] = new GridValue(0, arr[col], null);
                }

                lineCount++;
            }

        } catch (Exception e) {

        }

        if (values.length > 0) {
            ok = true;
        }

        this.dispose();

    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcDelimiter;
    private javax.swing.JTextField tfColumns;
    private javax.swing.JTextField tfFile;
    private javax.swing.JTextField tfLines;
    private javax.swing.JTextArea tfSample;
    // End of variables declaration//GEN-END:variables

    public GridValue[][] getValues() {
        return values;
    }

    public boolean isOk() {
        return ok;
    }
}
